/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedUsersImport } from './routes/_authenticated/users'
import { Route as AuthenticatedTeamsImport } from './routes/_authenticated/teams'
import { Route as AuthenticatedEventsImport } from './routes/_authenticated/events'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedAdminIndividualsImport } from './routes/_authenticated/admin/individuals'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersRoute = AuthenticatedUsersImport.update({
  path: '/users',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTeamsRoute = AuthenticatedTeamsImport.update({
  path: '/teams',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedEventsRoute = AuthenticatedEventsImport.update({
  path: '/events',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminIndividualsRoute =
  AuthenticatedAdminIndividualsImport.update({
    path: '/admin/individuals',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/events': {
      preLoaderRoute: typeof AuthenticatedEventsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/teams': {
      preLoaderRoute: typeof AuthenticatedTeamsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users': {
      preLoaderRoute: typeof AuthenticatedUsersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/individuals': {
      preLoaderRoute: typeof AuthenticatedAdminIndividualsImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedDashboardRoute,
    AuthenticatedEventsRoute,
    AuthenticatedTeamsRoute,
    AuthenticatedUsersRoute,
    AuthenticatedAdminIndividualsRoute,
  ]),
  HomeRoute,
  LoginRoute,
])

/* prettier-ignore-end */
